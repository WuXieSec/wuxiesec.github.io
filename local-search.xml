<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Python爬虫-运算符</title>
    <link href="/2022/08/30/%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    <url>/2022/08/30/%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
    
    <content type="html"><![CDATA[<h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><h3 id="1、算数运算符"><a href="#1、算数运算符" class="headerlink" title="1、算数运算符"></a>1、算数运算符</h3><ul><li>下面以a&#x3D;10,b&#x3D;20为例进行计算<table><thead><tr><th><strong>运算符</strong></th><th><strong>描述</strong></th><th><strong>实例</strong></th></tr></thead><tbody><tr><td>+</td><td>加</td><td>两个对象相加a+b输出结果30</td></tr><tr><td>-</td><td>减</td><td>得到负数或是一个数减去另一个数a-b输出结果-10</td></tr><tr><td>*</td><td>乘</td><td>两个数相乘或是返回一个被重复若干次的字符串a*b输出结果200</td></tr><tr><td>&#x2F;</td><td>除</td><td>b&#x2F;a输出结果2</td></tr><tr><td>&#x2F;&#x2F;</td><td>取整数</td><td>返回商的整数部分9&#x2F;&#x2F;2输出结果4，9.0&#x2F;&#x2F;2.0输出结果4.0</td></tr><tr><td>%</td><td>取余</td><td>返回除法的余数b%a输出结果0</td></tr><tr><td>**</td><td>指数</td><td>a**b为10的20次方</td></tr><tr><td>()</td><td>小括号</td><td>提高运算优先级，比如：（1+2）*3</td></tr></tbody></table></li></ul><ul><li><p>注意</p><blockquote><p>混合运算时优先级顺序为：<code>**</code>高于<code>* / % //</code>高于<code>+ -</code>,为了避免歧义，建议用()来处理运算优先级。并且，不同类型的数字在进行混合运算时，整数将会转换成浮点数进行运算。</p></blockquote></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-number">3</span><br>b = <span class="hljs-number">2</span><br><span class="hljs-built_in">print</span>(a + b) <span class="hljs-comment"># 5</span><br><span class="hljs-built_in">print</span>(a - b) <span class="hljs-comment"># 1</span><br><span class="hljs-built_in">print</span>(a * b) <span class="hljs-comment"># 6</span><br><span class="hljs-built_in">print</span>(a / b) <span class="hljs-comment"># 1.5</span><br><span class="hljs-comment"># 取整</span><br><span class="hljs-built_in">print</span>(a // b) <span class="hljs-comment"># 1 </span><br><span class="hljs-comment"># 取余</span><br><span class="hljs-built_in">print</span>(a % b) <span class="hljs-comment"># 1</span><br><span class="hljs-comment"># 指数 幂</span><br><span class="hljs-built_in">print</span>(a ** b) <span class="hljs-comment"># 9</span><br></code></pre></td></tr></table></figure><ul><li>扩展<ul><li>字符串的加法 是拼接的<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">&#x27;123&#x27;</span><br>b = <span class="hljs-string">&#x27;456&#x27;</span><br><span class="hljs-built_in">print</span>(a + b) <span class="hljs-comment"># 123456</span><br></code></pre></td></tr></table></figure></li><li>在python中 + 两端都是字符串才可以进行加法运算<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">&#x27;123&#x27;</span><br>b = <span class="hljs-number">456</span><br><span class="hljs-built_in">print</span>(a+<span class="hljs-built_in">str</span>(b)) <span class="hljs-comment"># 123456</span><br></code></pre></td></tr></table></figure></li><li>字符串的乘法 是将字符串重复多少次<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">&#x27;test&#x27;</span><br><span class="hljs-built_in">print</span>(a * <span class="hljs-number">3</span>) <span class="hljs-comment"># testtesttest</span><br></code></pre></td></tr></table></figure></li></ul></li></ul><h3 id="2、赋值运算符"><a href="#2、赋值运算符" class="headerlink" title="2、赋值运算符"></a>2、赋值运算符</h3><table><thead><tr><th><strong>运算符</strong></th><th><strong>描述</strong></th><th><strong>实例</strong></th></tr></thead><tbody><tr><td>&#x3D;</td><td>赋值运算符</td><td>把&#x3D;号右边的结果 赋给左边的变量，如num &#x3D; 1 + 2 * 3，结果num的值为7.</td></tr></tbody></table><ul><li>例子</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 单个变量赋值</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>num = <span class="hljs-number">10</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>num<br><span class="hljs-number">10</span><br><br><span class="hljs-comment"># 同时为多个变量赋值（使用等号连接）</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>a = b = <span class="hljs-number">4</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>a<br><span class="hljs-number">4</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>b<br><span class="hljs-number">4</span><br>&gt;&gt;&gt;<br><br><span class="hljs-comment"># 多个变量赋值（使用逗号分隔）</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>num1,f1,str1 = <span class="hljs-number">100</span>,<span class="hljs-number">3.14</span>,<span class="hljs-string">&quot;hello&quot;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>num1<br><span class="hljs-number">100</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>f1 <br><span class="hljs-number">3.14</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>str1<br>hello<br></code></pre></td></tr></table></figure><h3 id="3、复合赋值运算符"><a href="#3、复合赋值运算符" class="headerlink" title="3、复合赋值运算符"></a>3、复合赋值运算符</h3><table><thead><tr><th><strong>运算符</strong></th><th><strong>描述</strong></th><th><strong>实例</strong></th></tr></thead><tbody><tr><td>+&#x3D;</td><td>加法赋值运算符</td><td>c +&#x3D; a 等效于c &#x3D;  c + a</td></tr><tr><td>-&#x3D;</td><td>减法赋值运算符</td><td>c -&#x3D; a 等效于c &#x3D;  c - a</td></tr><tr><td>*&#x3D;</td><td>乘法赋值运算符</td><td>c *&#x3D; a 等效于c &#x3D;  c * a</td></tr><tr><td>&#x2F;&#x3D;</td><td>除法赋值运算符</td><td>c &#x2F;&#x3D; a 等效于c &#x3D;  c &#x2F; a</td></tr><tr><td>&#x2F;&#x2F;&#x3D;</td><td>取整赋值运算符</td><td>c &#x2F;&#x2F;&#x3D; a 等效于c &#x3D;  c &#x2F;&#x2F; a</td></tr><tr><td>%&#x3D;</td><td>取模赋值运算符</td><td>c %&#x3D; a 等效于c &#x3D;  c % a</td></tr><tr><td>**&#x3D;</td><td>幂赋值运算符</td><td>c **&#x3D; a 等效于c &#x3D;  c ** a</td></tr></tbody></table><ul><li>例子<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>a = <span class="hljs-number">100</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>a += <span class="hljs-number">1</span> <span class="hljs-comment"># 相当于执行了 a = a + 1</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>a<br><span class="hljs-number">101</span><br><br><span class="hljs-meta">&gt;&gt;&gt; </span>a = <span class="hljs-number">100</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>a -= <span class="hljs-number">1</span> <span class="hljs-comment"># 相当于执行了 a = a - 1</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>a<br><span class="hljs-number">99</span><br><br><span class="hljs-meta">&gt;&gt;&gt; </span>a = <span class="hljs-number">100</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>a *= <span class="hljs-number">1</span> <span class="hljs-comment"># 相当于 a = a * 1</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>a<br><span class="hljs-number">100</span><br><br><span class="hljs-meta">&gt;&gt;&gt; </span>a = <span class="hljs-number">100</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>a /= <span class="hljs-number">1</span> <span class="hljs-comment"># 相当于 a = a / 1</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>a<br><span class="hljs-number">100</span><br><br><span class="hljs-meta">&gt;&gt;&gt; </span>a = <span class="hljs-number">11</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>a //= <span class="hljs-number">2</span> <span class="hljs-comment"># 相当于 a = a // 2 (整除)</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>a<br><span class="hljs-number">5</span><br><br><span class="hljs-meta">&gt;&gt;&gt; </span>a = <span class="hljs-number">11</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>a %= <span class="hljs-number">2</span> <span class="hljs-comment"># 相当于 a = a % 2 (取余，取模，模余)</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>a<br><span class="hljs-number">1</span><br><br><span class="hljs-meta">&gt;&gt;&gt; </span>a = <span class="hljs-number">11</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>a **= <span class="hljs-number">2</span> <span class="hljs-comment"># 相当于 a = a ** 2 (幂)</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>a<br><span class="hljs-number">121</span><br></code></pre></td></tr></table></figure></li></ul><ul><li>总结<blockquote><p>+&#x3D; -&#x3D; *&#x3D; &#x2F;&#x3D; &#x2F;&#x2F;&#x3D; %&#x3D; **&#x3D;<br>+&#x3D; 最常用</p></blockquote></li></ul><h3 id="4、比较运算符"><a href="#4、比较运算符" class="headerlink" title="4、比较运算符"></a>4、比较运算符</h3><ul><li>以下假设变量a为10，变量b为20:</li></ul><table><thead><tr><th><strong>运算符</strong></th><th><strong>描述</strong></th><th><strong>实例</strong></th></tr></thead><tbody><tr><td>&#x3D;&#x3D;</td><td>等于：比较对象是否相等</td><td>(a&#x3D;&#x3D;b)返回 False</td></tr><tr><td>!&#x3D;</td><td>不等于：比较两个对象是否不相等</td><td>(a !&#x3D; b) 返回True</td></tr><tr><td>&gt;</td><td>大于：返回x是否大于y</td><td>(a&gt;b)返回 False</td></tr><tr><td>&gt;&#x3D;</td><td>大于等于：返回x是否大于等于y</td><td>(a&gt;&#x3D;b)返回 False</td></tr><tr><td>&lt;</td><td>小于：返回x是否小于y</td><td>(a&lt;b) 返回True</td></tr><tr><td>&lt;&#x3D;</td><td>小于等于：返回x是否小于等于y</td><td>(a&lt;&#x3D;b) 返回True</td></tr></tbody></table><ul><li>代码实例</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 比较运算符返回的都是boolean类型的数据</span><br><br><span class="hljs-comment"># == 恒等  判断 == 两边的变量是否是一致</span><br>a = <span class="hljs-number">10</span><br>b = <span class="hljs-number">10</span><br><span class="hljs-built_in">print</span>(a == b) <span class="hljs-comment">#  True</span><br><br><span class="hljs-comment"># != 不等 判断 != 两边的变量是否不一致</span><br>a = <span class="hljs-number">10</span><br>b = <span class="hljs-number">10</span><br><span class="hljs-built_in">print</span>(a != b) <span class="hljs-comment"># False</span><br><span class="hljs-comment"># 扩展： &lt;&gt;这个不等是python2 版本使用的 python3 被遗弃了 不支持了</span><br><br><span class="hljs-comment"># &gt;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">10</span> &gt; <span class="hljs-number">20</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-number">10</span> &gt; <span class="hljs-number">5</span>)<br><br><span class="hljs-comment"># &gt;= 大于等于</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">10</span> &gt;= <span class="hljs-number">10</span>) <span class="hljs-comment"># True</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">10</span> &gt;= <span class="hljs-number">5</span>) <span class="hljs-comment"># True</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">10</span> &gt;= <span class="hljs-number">20</span>) <span class="hljs-comment"># False</span><br><br><span class="hljs-comment"># &lt; 小于</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">10</span> &lt; <span class="hljs-number">20</span>) <span class="hljs-comment">#True</span><br><br><span class="hljs-comment"># &lt;= 小于等于</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">10</span> &lt;= <span class="hljs-number">10</span>) <span class="hljs-comment"># True</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">20</span> &lt;= <span class="hljs-number">10</span>) <span class="hljs-comment"># False</span><br></code></pre></td></tr></table></figure><h3 id="5、逻辑运算符"><a href="#5、逻辑运算符" class="headerlink" title="5、逻辑运算符"></a>5、逻辑运算符</h3><table><thead><tr><th><strong>运算符</strong></th><th><strong>逻辑表达式</strong></th><th><strong>描述</strong></th><th><strong>实例</strong></th></tr></thead><tbody><tr><td>and</td><td>x and y</td><td>只要有一个运算数是False，结果就是False；<br />只有所有的运算数都为True时，结果才是True；<br />做取值运算时，取第一个为False的值；如果所有的值都为False，则取最后一个值</td><td>True and True and False 结果为False；<br />True and True and True 结果为True<br /></td></tr><tr><td>or</td><td>x or y</td><td>只要有一个运算数是True，结果就是True；<br />只有所有的运算数都为False时，结果才是False；<br />做取值运算时，取第一个为True的值，如果值都为False，取最后一个值</td><td>False or False or True  结果为True；<br />False or False or False 结果为False；<br /></td></tr><tr><td>not</td><td>not x</td><td>布尔 “非”  如果x为True 则返回False；如果x为False，则返回True。</td><td>not True &gt;False；<br />not False &gt;True<br /></td></tr></tbody></table><ul><li>代码实例</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 逻辑运算符 and（与） or（或） not （非）</span><br><br><span class="hljs-comment"># and 与</span><br><span class="hljs-comment"># and 两边的数据 必须全部都是True的时候 才会返回True 只要一端返回的是False  那么就返回False</span><br><span class="hljs-comment"># and 两边都是False的时候 返回的是False</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">10</span> &gt; <span class="hljs-number">20</span> <span class="hljs-keyword">and</span> <span class="hljs-number">10</span> &gt; <span class="hljs-number">11</span>)<br><span class="hljs-comment"># and 一边是False，一边是True的时候 返回的是False</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">10</span> &gt; <span class="hljs-number">3</span> <span class="hljs-keyword">and</span> <span class="hljs-number">10</span> &gt; <span class="hljs-number">11</span>)<br><span class="hljs-comment"># and 两边返回的都是True则返回的是True</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">10</span> &gt; <span class="hljs-number">3</span> <span class="hljs-keyword">and</span> <span class="hljs-number">10</span> &gt; <span class="hljs-number">4</span>)<br><br><span class="hljs-comment"># or 或者</span><br><span class="hljs-comment"># or 的两端都是False 则返回的是False</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">10</span> &gt; <span class="hljs-number">20</span> <span class="hljs-keyword">and</span> <span class="hljs-number">10</span> &gt; <span class="hljs-number">11</span>)<br><span class="hljs-comment"># or 的两端 前面的一端为True 后面的一端为False 则返回的是True</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">10</span> &gt; <span class="hljs-number">3</span> <span class="hljs-keyword">and</span> <span class="hljs-number">10</span> &gt; <span class="hljs-number">11</span>)<br><span class="hljs-comment"># or 的两端 前面的一端为False 后面的一端为True 则返回的是True</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">10</span> &gt; <span class="hljs-number">20</span> <span class="hljs-keyword">and</span> <span class="hljs-number">10</span> &gt; <span class="hljs-number">1</span>)<br><span class="hljs-comment"># or 的两端都是True 则返回的是True</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">10</span> &gt; <span class="hljs-number">2</span> <span class="hljs-keyword">and</span> <span class="hljs-number">10</span> &gt; <span class="hljs-number">1</span>)<br><br><span class="hljs-comment"># not 非 取反</span><br><span class="hljs-built_in">print</span>(<span class="hljs-keyword">not</span> <span class="hljs-literal">True</span>) <span class="hljs-comment"># False</span><br><span class="hljs-built_in">print</span>(<span class="hljs-keyword">not</span> <span class="hljs-literal">False</span>) <span class="hljs-comment"># True</span><br><span class="hljs-built_in">print</span>(<span class="hljs-keyword">not</span> (<span class="hljs-number">10</span> &gt; <span class="hljs-number">30</span>)) <span class="hljs-comment"># True</span><br></code></pre></td></tr></table></figure><ul><li>逻辑运算符的性能优化<ul><li><p>实例代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># and 的性能优化</span><br>a = <span class="hljs-number">36</span><br>a &gt; <span class="hljs-number">10</span> <span class="hljs-keyword">and</span> <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hello word&quot;</span>) <span class="hljs-comment">#  输出 hello word</span><br><span class="hljs-comment"># and的性能优化 当and 前面的结果是False的情况下 那么后面的代码就不再执行了</span><br>a &lt; <span class="hljs-number">10</span> <span class="hljs-keyword">and</span> <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hello word&quot;</span>) <span class="hljs-comment"># 不输出</span><br><br><span class="hljs-comment"># or 的性能优化</span><br><span class="hljs-comment"># or 只要一方为True 那么结果就是True</span><br>a = <span class="hljs-number">38</span> <br>a &gt; <span class="hljs-number">39</span> <span class="hljs-keyword">or</span> <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;hello word&#x27;</span>) <span class="hljs-comment"># 输出 hello word</span><br><span class="hljs-comment"># 前面为True了 后面就不做判断了</span><br>a &gt; <span class="hljs-number">37</span> <span class="hljs-keyword">or</span> <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;hello word&#x27;</span>) <span class="hljs-comment"># 不会执行hello word</span><br></code></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python爬虫</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python爬虫-类型转换</title>
    <link href="/2022/08/29/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/"/>
    <url>/2022/08/29/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h2><table><thead><tr><th><strong>函数</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>int(x)</td><td>将x转换为一个整数</td></tr><tr><td>float(x)</td><td>将x转换为一个浮点数</td></tr><tr><td>str(x)</td><td>将x转换为一个字符串</td></tr><tr><td>bool(x)</td><td>将x转换为一个布尔值</td></tr></tbody></table><h3 id="转换为整数"><a href="#转换为整数" class="headerlink" title="转换为整数"></a>转换为整数</h3><ul><li>注意<ul><li>123.456和12ab字符串都包含非法字符，不能转换成整数，会报错。</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># str --&gt; int</span><br>a = <span class="hljs-string">&#x27;123&#x27;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">int</span>(<span class="hljs-string">&quot;123&quot;</span>)) <span class="hljs-comment"># 123 将字符串转换成为整数</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">int</span>(<span class="hljs-number">123.78</span>)) <span class="hljs-comment"># 123 将浮点数转换成为整数</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">int</span>(<span class="hljs-literal">True</span>)) <span class="hljs-comment"># 1 布尔值True转换成为整数是1</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">int</span>(<span class="hljs-literal">False</span>)) <span class="hljs-comment"># 0 布尔值False转换成为整数是0</span><br></code></pre></td></tr></table></figure><h3 id="转换浮点数"><a href="#转换浮点数" class="headerlink" title="转换浮点数"></a>转换浮点数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">f1 = <span class="hljs-built_in">float</span>(<span class="hljs-string">&quot;12.34&quot;</span>)<br><span class="hljs-built_in">print</span>(f1) <span class="hljs-comment"># 12.34</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(f1)) <span class="hljs-comment"># float 将字符串的“12.34”转换成浮点数12.34</span><br><br>f2 = <span class="hljs-built_in">float</span>(<span class="hljs-number">23</span>)<br><span class="hljs-built_in">print</span>(f2) <span class="hljs-comment"># 23.0</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(f2)) <span class="hljs-comment"># float 将整数转换成为了浮点数</span><br></code></pre></td></tr></table></figure><h3 id="转换字符串"><a href="#转换字符串" class="headerlink" title="转换字符串"></a>转换字符串</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">str1 = <span class="hljs-built_in">str</span>(<span class="hljs-number">45</span>)<br>str2 = <span class="hljs-built_in">str</span>(<span class="hljs-number">34.56</span>)<br>str3 = <span class="hljs-built_in">str</span>(<span class="hljs-literal">True</span>) <span class="hljs-comment"># True（str）</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(str1),<span class="hljs-built_in">type</span>(str2),<span class="hljs-built_in">type</span>(str3))<br><br><span class="hljs-comment"># &lt;class &#x27;str&#x27;&gt; &lt;class &#x27;str&#x27;&gt; &lt;class &#x27;str&#x27;&gt;</span><br></code></pre></td></tr></table></figure><h3 id="转换成布尔值"><a href="#转换成布尔值" class="headerlink" title="转换成布尔值"></a>转换成布尔值</h3><ul><li>注意<ul><li>如果对非0的整数进行bool类型的转换 那么就全部是True；在整数范围内 0强制转换为bool类型的结果是False；</li><li>将浮点数转换为bool类型的数据时候 正的浮点数和负的浮点数的结果都是True；  如果是0.0 则是False；</li><li>只要字符串有内容，那么强制类型转换为bool的时候，那么就返回True；空格也是True 留空是False；</li><li>只要列表中有数据，那么强制转换为bool的时候，就返回True；无数据 则返回False；</li><li>只要元组中有数据，那么强制转换为bool的时候，就返回Ture；无数据 则返回False；</li><li>只要字典中有内容，那么强制转换为bool的时候，就返回True；无数据 则返回False；</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 什么情况下为False</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bool</span>(<span class="hljs-string">&#x27;&#x27;</span>)) <span class="hljs-comment"># False</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bool</span>(<span class="hljs-string">&quot;&quot;</span>)) <span class="hljs-comment"># False</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bool</span>(<span class="hljs-number">0</span>)) <span class="hljs-comment"># False</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bool</span>(&#123;&#125;)) <span class="hljs-comment"># False 字典为空</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bool</span>([])) <span class="hljs-comment"># False 列表为空</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bool</span>(())) <span class="hljs-comment"># False 元组为空</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python爬虫</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>红日靶场（一）（下）</title>
    <link href="/2022/08/28/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%911%E4%B8%8B/"/>
    <url>/2022/08/28/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%911%E4%B8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="红日内网靶场——红队评估-一-下"><a href="#红日内网靶场——红队评估-一-下" class="headerlink" title="红日内网靶场——红队评估(一)(下)"></a>红日内网靶场——红队评估(一)(下)</h1><h4 id="四、内网信息收集"><a href="#四、内网信息收集" class="headerlink" title="四、内网信息收集"></a>四、内网信息收集</h4><h5 id="4-1、webshell信息收集并上线CS"><a href="#4-1、webshell信息收集并上线CS" class="headerlink" title="4.1、webshell信息收集并上线CS"></a>4.1、webshell信息收集并上线CS</h5><ul><li>查看用户权限(whoami)和是否存在杀软(tasklist)</li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/28.png"></p><ul><li><p>不存在杀软，尝试上线CS</p><ul><li>先选择 Packages– Windows Executable(S)</li></ul></li></ul><p> <img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/29.png"></p><ul><li>选择自己建的Listener，Output选择PWindows ExE,如果是64位的系统就钩上Use X64 payload并选择保存的位置</li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/30.png"></p><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/31.png"></p><ul><li>将生成的exe文件利用哥斯拉上传到服务器</li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/32.png"></p><ul><li>执行该程序</li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/33.png"></p><ul><li>查看CS，成功上线</li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/34.png"></p><h4 id="五、利用CS进行信息收集"><a href="#五、利用CS进行信息收集" class="headerlink" title="五、利用CS进行信息收集"></a>五、利用CS进行信息收集</h4><h5 id="5-1-1、系统信息收集"><a href="#5-1-1、系统信息收集" class="headerlink" title="5.1.1、系统信息收集"></a>5.1.1、系统信息收集</h5><ul><li>查看IP信息(ipconfig &#x2F;all)<ul><li>存在域(god.org)且DC的Ip为192.52.138</li></ul></li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/35.png"></p><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/36.png"></p><ul><li>查看工作站运行(net config Workstation)</li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/37.png"></p><ul><li>显示当前域的计算机列表(net view)</li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/38.png"></p><h5 id="5-1-2、主机密码收集"><a href="#5-1-2、主机密码收集" class="headerlink" title="5.1.2、主机密码收集"></a>5.1.2、主机密码收集</h5><ul><li>利用CS的logonpasswords抓取密码</li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/39.png"></p><ul><li>利用CS的hashdump抓一波hash</li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/47.png"></p><ul><li>所有凭据如下</li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/48.png"></p><h5 id="5-1-3、内网主机收集"><a href="#5-1-3、内网主机收集" class="headerlink" title="5.1.3、内网主机收集"></a>5.1.3、内网主机收集</h5><ul><li><p>使用CS自带的端口扫描扫一波主机</p><ul><li><code>portscan 192.168.170.0-192.168.170.255 1-1025,2289,5000-600 arp 1024</code></li></ul></li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/44.png"></p><ul><li>扫面出来的主机在View-Targets里面</li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/46.png"></p><ul><li>结果如下</li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/45.png"></p><h4 id="六、内网横向渗透"><a href="#六、内网横向渗透" class="headerlink" title="六、内网横向渗透"></a>六、内网横向渗透</h4><h5 id="6-1-1、主机提权"><a href="#6-1-1、主机提权" class="headerlink" title="6.1.1、主机提权"></a>6.1.1、主机提权</h5><ul><li>whoami &#x2F;all 发现是administrator权限</li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/40.png"></p><ul><li><p>利用计划任务权限维持尝试反弹system权限</p><ul><li><code>schtasks /create /ru system /tn &quot;Microsoft\Windows\Multimedia\SystemMediaService&quot; /sc MINUTE /mo 50  /tr &quot;C:\Windows\system.exe&quot; /st 16:22 /f</code> (创建一个名为Microsoft\Windows\Multimedia\SystemMediaService, 16:22开始执行，每50分钟执行一次)</li><li><code>SCHTASKS /Run /TN &quot;Microsoft\Windows\Multimedia\SystemMediaService&quot; /f </code>(启动计划任务)</li><li>成功反弹system权限</li></ul></li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/41.png"></p><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/42.png"></p><ul><li>删除计划任务<ul><li><code>schtasks /delete /tn &quot;Microsoft\Windows\Multimedia\SystemSoundsService&quot; /f</code>(删除计划任务)</li></ul></li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/43.png"></p><h5 id="6-1-2、不出网主机上线"><a href="#6-1-2、不出网主机上线" class="headerlink" title="6.1.2、不出网主机上线"></a>6.1.2、不出网主机上线</h5><ul><li><p>不出网机器上线一般有三种方式上线</p><ul><li>使用smb beacon</li><li>配置listener通过HTTP代理上线</li><li>使用pystinger搭建 socks4代理</li></ul></li><li><p>学习使用SMB beacon</p><ul><li><code>SMB Beacon使用命名管道通过父级Beacon进行通讯，当两个Beacons链接后，子Beacon从父Beacon获取到任务并发送。因为链接的Beacons使用Windows命名管道进行通信，此流量封装在SMB协议中，所以SMBbeacon相对隐蔽。SMB beacon不能直接生成可用载荷, 只能使用 PsExec 或 Stageless Payload 上线</code></li><li><code>首先得到内网中一台主机的beacon，抓取密码后进行smb喷射，得到另一台开放445端口的机器上的administrator账户密码，在目标机器不出网的情况下，可以使用Smb</code></li></ul></li><li><p>使用条件</p><ul><li>具有 SMB Beacon 的主机必须接受 445 端口上的连接</li><li>只能链接由同一个 Cobalt Strike 实例管理的 Beacon。</li><li>利用这种beacon横移必须有目标主机的管理员权限或者说是拥有具有管理员权限的凭据。</li></ul></li><li><p>使用方法</p><ul><li>1、建立smb listener</li></ul></li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/49.png"></p><ul><li>在cs中使用psexec进行横向移动，选择现有的beacon作为跳板，凭据必须是administrator，拥有目标主机管理员权限</li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/50.png"></p><ul><li>连接成功，可以看到smb beacon上线的主机右侧有∞∞标识，如果出网主机掉线了，那么这太不出网的也会断</li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/51.png"></p><ul><li>尝试利用同样方法拿下域控</li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/52.png"></p><ul><li>域控已上线</li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/53.png"></p><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/54.png"></p><h4 id="七、小结"><a href="#七、小结" class="headerlink" title="七、小结"></a>七、小结</h4><ul><li>此次由于刚接触内网 所以只用了SMB横向，等在学习学习尝试用永恒之蓝横向</li><li>新手上路，多多指教</li></ul>]]></content>
    
    
    <categories>
      
      <category>内网</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>应急响应（一）</title>
    <link href="/2022/08/27/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E9%9D%B6%E5%9C%BA1/"/>
    <url>/2022/08/27/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E9%9D%B6%E5%9C%BA1/</url>
    
    <content type="html"><![CDATA[<h1 id="应急响应靶场——-Win2008-WK木马"><a href="#应急响应靶场——-Win2008-WK木马" class="headerlink" title="应急响应靶场——(Win2008)WK木马"></a>应急响应靶场——(Win2008)WK木马</h1><h3 id="一、靶场出处"><a href="#一、靶场出处" class="headerlink" title="一、靶场出处"></a>一、靶场出处</h3><p>想要学习应急响应，然后就去找靶场，然后发现这位师傅有靶场环境，还有复现环境，故此学习一下。</p><ul><li><a href="https://wxiaoge.blog.csdn.net/?type=blog">https://wxiaoge.blog.csdn.net/?type=blog</a></li></ul><h3 id="二、靶场事件背景"><a href="#二、靶场事件背景" class="headerlink" title="二、靶场事件背景"></a>二、靶场事件背景</h3><ul><li><p>服务器疑似被入侵，风扇噪声很大</p></li><li><p>服务器为Windows2008，IP为192.168.226.137</p></li></ul><p><img src="/../images/yjxy-1/1.png"></p><h3 id="三、应急响应过程"><a href="#三、应急响应过程" class="headerlink" title="三、应急响应过程"></a>三、应急响应过程</h3><ul><li>一般情况下，CPU消耗很大的情况下风扇的噪声才会很大，应该是WK木马</li></ul><h4 id="3-1-排查服务器病毒程序"><a href="#3-1-排查服务器病毒程序" class="headerlink" title="3.1 排查服务器病毒程序"></a>3.1 排查服务器病毒程序</h4><h5 id="3-1-1、确认是否为WK"><a href="#3-1-1、确认是否为WK" class="headerlink" title="3.1.1、确认是否为WK"></a>3.1.1、确认是否为WK</h5><ul><li>发现服务器开了个java程序，上面带有一个外链网站</li></ul><p><img src="/../images/yjxy-1/2.png"></p><ul><li>微步在线 去查该外链URL，发现该URL为矿池</li></ul><p><img src="/../images/yjxy-1/3.png"></p><ul><li>通过查看任务管理器 发现该程序占用的 内存以及cpu使用率非常大</li></ul><p><img src="/../images/yjxy-1/4.png"></p><ul><li>右键打开该WK程序的位置，发现目录名字为wkxx<ul><li>C:\Users\Administrator\Downloads\wkbd\wkbd\javs.exe</li></ul></li></ul><p><img src="/../images/yjxy-1/5.png"></p><ul><li>通过查看config.json,发现Kuang池地址及其用户信息</li></ul><p><img src="/../images/yjxy-1/6.png"></p><ul><li>将java.exe上传到微步云沙箱，发现被标记为恶意软件</li></ul><p><img src="/../images/yjxy-1/7.png"></p><ul><li>确定是 WK程序了，在任务管理器结束掉，但是发现过一会儿该程序又运行了</li></ul><p><img src="/../images/yjxy-1/8.png"></p><p><img src="/../images/yjxy-1/9.png"></p><h5 id="3-1-2、深度排查服务器"><a href="#3-1-2、深度排查服务器" class="headerlink" title="3.1.2、深度排查服务器"></a>3.1.2、深度排查服务器</h5><ul><li>查看计划任务 taskschd.msc</li></ul><p><img src="/../images/yjxy-1/10.png"></p><ul><li>计划任务程序里面发现一个名称为system的计划任务是正在运行的</li></ul><p><img src="/../images/yjxy-1/11.png"></p><ul><li>点开该计划任务，查看操作发现是启动程序任务，并且启动程序的地址是指向WK程序的</li></ul><p><img src="/../images/yjxy-1/12.png"></p><ul><li>继续查看发现是Administrator用户在3月13号创建的计划任务</li></ul><p><img src="/../images/yjxy-1/13.png"></p><ul><li>删除该计划任务并任务管理器结束该进程和删除WK程序的目录</li></ul><p><img src="/../images/yjxy-1/14.png"></p><h4 id="3-2、排查服务器后门"><a href="#3-2、排查服务器后门" class="headerlink" title="3.2、排查服务器后门"></a>3.2、排查服务器后门</h4><h5 id="3-2-1、查看可疑进程"><a href="#3-2-1、查看可疑进程" class="headerlink" title="3.2.1、查看可疑进程"></a>3.2.1、查看可疑进程</h5><ul><li>使用利用Autoruns查看服务器是否有可疑进程<ul><li>未发现可疑进程</li></ul></li></ul><p><img src="/../images/yjxy-1/15.png"></p><h5 id="3-2-2、查看是否存在可疑的启动项"><a href="#3-2-2、查看是否存在可疑的启动项" class="headerlink" title="3.2.2、查看是否存在可疑的启动项"></a>3.2.2、查看是否存在可疑的启动项</h5><ul><li>用Autoruns查看是否有可疑的启动项<ul><li>未发现可疑的启动项</li></ul></li></ul><p><img src="/../images/yjxy-1/16.png"></p><h5 id="3-2-3、查看计划任务"><a href="#3-2-3、查看计划任务" class="headerlink" title="3.2.3、查看计划任务"></a>3.2.3、查看计划任务</h5><ul><li>查看计划任务，之前WK计划任务已经被删除，所以现在无异常的计划任务</li></ul><p><img src="/../images/yjxy-1/17.png"></p><h5 id="3-2-4、查看服务"><a href="#3-2-4、查看服务" class="headerlink" title="3.2.4、查看服务"></a>3.2.4、查看服务</h5><ul><li>未发现可疑的服务</li></ul><p><img src="/../images/yjxy-1/18.png"></p><h5 id="3-2-5、查看镜像劫持"><a href="#3-2-5、查看镜像劫持" class="headerlink" title="3.2.5、查看镜像劫持"></a>3.2.5、查看镜像劫持</h5><ul><li>发现shift粘贴键后门，后门路径C:\windows\system32\cmd.exe 可以在不登录服务器的情况下，以Administrator权限 执行cmd</li></ul><p><img src="/../images/yjxy-1/19.png"></p><h5 id="3-2-6、查看是否有隐藏用户"><a href="#3-2-6、查看是否有隐藏用户" class="headerlink" title="3.2.6、查看是否有隐藏用户"></a>3.2.6、查看是否有隐藏用户</h5><ul><li>通过 控制面板\所有控制面板项\用户帐户\管理帐户 里面只有administrator和guest用户</li></ul><p><img src="/../images/yjxy-1/20.png"></p><ul><li>通过注册表查看 HKEY_LOCAL_MACHINE\SAM\SAM\Domains\Account\Users\Names 发现wxiaoge$</li></ul><p><img src="/../images/yjxy-1/21.png"></p><h4 id="3-3、排查网络连接"><a href="#3-3、排查网络连接" class="headerlink" title="3.3、排查网络连接"></a>3.3、排查网络连接</h4><ul><li>使用netstat -ano 查看网络连接，未发现可疑连接</li></ul><p><img src="/../images/yjxy-1/22.png"></p><h4 id="四、应急响应溯源"><a href="#四、应急响应溯源" class="headerlink" title="四、应急响应溯源"></a>四、应急响应溯源</h4><h5 id="4-1-1、查看WK木马的计划任务创建时间"><a href="#4-1-1、查看WK木马的计划任务创建时间" class="headerlink" title="4.1.1、查看WK木马的计划任务创建时间"></a>4.1.1、查看WK木马的计划任务创建时间</h5><ul><li>WK木马的创建者是Administrator,创建时间是2022-03-23 9:46:17</li></ul><p><img src="/../images/yjxy-1/13.png"></p><h5 id="4-2-1-排查安全日志"><a href="#4-2-1-排查安全日志" class="headerlink" title="4.2.1 排查安全日志"></a>4.2.1 排查安全日志</h5><ul><li>分析安全日志 ，发现21号有大量的爆破</li></ul><p><img src="/../images/yjxy-1/25.png"></p><ul><li>但是均未发现ip地址</li></ul><p><img src="/../images/yjxy-1/26.png"></p><p><img src="/../images/yjxy-1/27.png"></p><ul><li>接着查找，发现2022&#x2F;3&#x2F;21 16:27:12，IP：192.168.226.1成功登录该服务器</li></ul><p><img src="/../images/yjxy-1/28.png"></p><ul><li>继续排查，发现在 2022&#x2F;3&#x2F;21 16:28:12 黑客使用administrator账户创建了隐藏账户 wxiaoge$</li></ul><p><img src="/../images/yjxy-1/29.png"></p><ul><li>继续排查系统日志，发现在 2022&#x2F;3&#x2F;23 9:36:02 服务器去解析 xmr.usa-138.com 域名，这个域名是公共矿池，说明此时已经植入挖矿程序并且运行</li></ul><p><img src="/../images/yjxy-1/30.png"></p><h4 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h4><h5 id="5-1-1、寻找WK小结"><a href="#5-1-1、寻找WK小结" class="headerlink" title="5.1.1、寻找WK小结"></a>5.1.1、寻找WK小结</h5><ul><li>1、WaKuang病毒位置：C:\Users\Administrator\Downloads\wkbd\wkbd\ 目录<ul><li>删除C:\Users\Administrator\Downloads\wkbd\wkbd\ 目录</li></ul></li><li>2、存在挖矿程序的计划任务，任务名字system<ul><li>删除挖矿程序的计划任务。</li></ul></li></ul><h5 id="5-1-2-排查小结"><a href="#5-1-2-排查小结" class="headerlink" title="5.1.2 排查小结"></a>5.1.2 排查小结</h5><ul><li><p>1、存在Windows隐藏用户</p><ul><li>通过注册表找到并删除</li></ul></li><li><p>2、存在shift粘贴键后门</p><ul><li>删除sethc.exe</li></ul></li></ul><h5 id="5-1-3溯源小结"><a href="#5-1-3溯源小结" class="headerlink" title="5.1.3溯源小结"></a>5.1.3溯源小结</h5><ul><li>根据日志推测：<ul><li>黑客在2022&#x2F;3&#x2F;21 16:27:12对服务器爆破administrarot成功，用ip为192.168.226.1登录成功</li><li>在2022&#x2F;3&#x2F;21 16:28:12使用administrator服务器创建了隐藏用户wxiaoge</li><li>在2022&#x2F;3&#x2F;23 9:36:02 植入挖矿程序并且运行</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>应急</category>
      
    </categories>
    
    
    <tags>
      
      <tag>应急响应</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>红日靶场（一）（上）</title>
    <link href="/2022/08/26/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%911/"/>
    <url>/2022/08/26/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%911/</url>
    
    <content type="html"><![CDATA[<h1 id="红日内网靶场——红队评估-一-上"><a href="#红日内网靶场——红队评估-一-上" class="headerlink" title="红日内网靶场——红队评估(一)(上)"></a>红日内网靶场——红队评估(一)(上)</h1><h4 id="一、环境搭建"><a href="#一、环境搭建" class="headerlink" title="一、环境搭建"></a>一、环境搭建</h4><h5 id="1-1、环境部署"><a href="#1-1、环境部署" class="headerlink" title="1.1、环境部署"></a>1.1、环境部署</h5><ul><li>WIN7 （web服务器） 双网卡（内外网 IP）<ul><li>网卡 1 IP:192.168.52.143 （内网服务器 存在yxcms）</li><li>网卡 2 IP:192.168.17.130（外网DHCP自动获取）</li></ul></li><li>WIN 2008（域控） 单内网网卡<ul><li>网卡IP：192.168.52.138</li></ul></li><li>WIN 2003 （域成员） 单内网卡<ul><li>网卡IP ：192.168.52.141</li></ul></li><li>Kali （攻击机） 外网网卡<ul><li>网卡IP：192.168.17.131</li></ul></li></ul><h5 id="1-2、拓扑图"><a href="#1-2、拓扑图" class="headerlink" title="1.2、拓扑图"></a>1.2、拓扑图</h5><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/1.png"></p><h4 id="二、信息收集"><a href="#二、信息收集" class="headerlink" title="二、信息收集"></a>二、信息收集</h4><h5 id="2-1、页面信息收集"><a href="#2-1、页面信息收集" class="headerlink" title="2.1、页面信息收集"></a>2.1、页面信息收集</h5><ul><li>192.168.17.130 打开是一个phpstudy的探针<ul><li>有一个数据库测试功能，尝试弱口令 root&#x2F;root，测试正常，说明数据库存在弱口令</li><li>发现了绝对路径和一些组件的版本信息，绝对路径可以sql注入写shell，版本信息可以找一些历史漏洞</li></ul></li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/2.png"></p><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/3.png"></p><h5 id="2-2、端口加敏感目录扫描"><a href="#2-2、端口加敏感目录扫描" class="headerlink" title="2.2、端口加敏感目录扫描"></a>2.2、端口加敏感目录扫描</h5><ul><li>使用nmap对192.168.17.130进行端口扫描 找找是否存在高危端口<ul><li>存在3306端口，是mysql的端口，刚才已经知道有弱口令了，一会儿可以直接利用。</li></ul></li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/4.png"></p><ul><li>使用dirb扫描目录 探测是否存在敏感目录<ul><li>存在phpmyadmin，知道绝对路径，可以尝试写shell</li></ul></li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/5.png"></p><ul><li>登陆phpmyadmin看看是否有可以利用的数据<ul><li>root&#x2F;root 弱口令登陆成功</li></ul></li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/6.png"></p><ul><li>发现存在yxcms的数据库，尝试访问yxcms的路径。</li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/8.png"></p><h5 id="2-3、yxcms的信息收集"><a href="#2-3、yxcms的信息收集" class="headerlink" title="2.3、yxcms的信息收集"></a>2.3、yxcms的信息收集</h5><ul><li>观察页面，发现公告上写着后台路径和 默认口令<ul><li>后台路径：&#x2F;index.php?r&#x3D;admin 默认口令：admin&#x2F;123456</li></ul></li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/9.png"></p><ul><li>访问后台尝试默认密码登陆</li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/10.png"></p><ul><li>登陆成功</li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/11.png"></p><ul><li>通过观察后台页面，发现 有一个前台模版新建模版的功能点，可以直接写 php文件。</li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/12.png"></p><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/13.png"></p><h4 id="三、漏洞利用"><a href="#三、漏洞利用" class="headerlink" title="三、漏洞利用"></a>三、漏洞利用</h4><h5 id="3-1、利用phpmyadmin写shell"><a href="#3-1、利用phpmyadmin写shell" class="headerlink" title="3.1、利用phpmyadmin写shell"></a>3.1、利用phpmyadmin写shell</h5><ul><li>直接通过 SQL 查询语句 outfile 写入一句话木马，先看是否存在写入的权限<ul><li>show global variables like ‘%secure%’;<ul><li>显示为NULL 只可读不可写</li></ul></li></ul></li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/14.png"></p><ul><li><p>开启全局日志getshell</p><ul><li>show variables like ‘%general%’;查询全局日志变量配置</li></ul></li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/15.png"></p><ul><li>开启general_log将所有查询语句都记录到指定可以访问的文件中</li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/16.png"></p><ul><li>日志记录的目录，是绝对路径，在php探针上已经拿到。</li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/17.png"></p><ul><li>检查是否更改成功</li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/17.png"></p><ul><li>尝试写入一句话木马. 就算报错日志也会记录下来。</li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/18.png"></p><ul><li>尝试用哥斯拉连接  成功</li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/19.png"></p><h5 id="3-2、yxcms上传webshell"><a href="#3-2、yxcms上传webshell" class="headerlink" title="3.2、yxcms上传webshell"></a>3.2、yxcms上传webshell</h5><ul><li>利用前台模版新建一个php页面，写上一句话木马，抓包看看是否有回显路径<ul><li>并没有返回URL的路径，只能试试别的办法</li></ul></li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/20.png"></p><ul><li><p>没有路径 可以看看robots.txt 或者去做目录扫描，看看是否有新的发现</p><ul><li><p>访问robots.txt 看是否存在可利用的目录</p><ul><li>存在&#x2F;data &#x2F;protected目录 访问了一下 发现有个目录浏览，找到刚才传的she_ll.php</li></ul></li></ul></li></ul><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/22.png"></p><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/23.png"></p><pre><code class="hljs">- 路径http://192.168.17.130/yxcms//protected/apps/default/view/default/she_ll.php</code></pre><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/25.png"></p><pre><code class="hljs">- 尝试连接</code></pre><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/26.png"></p><p><img src="/../images/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%201/27.png"></p>]]></content>
    
    
    <categories>
      
      <category>内网</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
